<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="officename" targetNamespace="http://tempuri.org/officename.xsd" xmlns:mstns="http://tempuri.org/officename.xsd" xmlns="http://tempuri.org/officename.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="IGRSS_FINALConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="IGRSS_FINALConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.IGRSS.Properties.Settings.GlobalReference.Default.IGRSS_FINALConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="OfficesTableAdapter" GeneratorDataComponentClassName="OfficesTableAdapter" Name="Offices" UserDataComponentName="OfficesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="IGRSS_FINALConnectionString (Settings)" DbObjectName="IGRSS_FINAL.dbo.Offices" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Offices] WHERE (([OfficeId] = @Original_OfficeId) AND ([OfficeName] = @Original_OfficeName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@Original_OfficeId" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="OfficeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_OfficeName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="OfficeName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Offices] ([OfficeId], [OfficeName]) VALUES (@OfficeId, @OfficeName);
SELECT OfficeId, OfficeName FROM dbo.Offices WHERE (OfficeId = @OfficeId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@OfficeId" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="OfficeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@OfficeName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="OfficeName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        OfficeId, OfficeName
FROM            dbo.Offices</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Offices] SET [OfficeId] = @OfficeId, [OfficeName] = @OfficeName WHERE (([OfficeId] = @Original_OfficeId) AND ([OfficeName] = @Original_OfficeName));
SELECT OfficeId, OfficeName FROM dbo.Offices WHERE (OfficeId = @OfficeId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@OfficeId" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="OfficeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@OfficeName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="OfficeName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@Original_OfficeId" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="OfficeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_OfficeName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="OfficeName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="OfficeId" DataSetColumn="OfficeId" />
              <Mapping SourceColumn="OfficeName" DataSetColumn="OfficeName" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="officename" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="officename" msprop:Generator_UserDSName="officename">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Offices" msprop:Generator_TableClassName="OfficesDataTable" msprop:Generator_TableVarName="tableOffices" msprop:Generator_TablePropName="Offices" msprop:Generator_RowDeletingName="OfficesRowDeleting" msprop:Generator_UserTableName="Offices" msprop:Generator_RowChangingName="OfficesRowChanging" msprop:Generator_RowEvHandlerName="OfficesRowChangeEventHandler" msprop:Generator_RowDeletedName="OfficesRowDeleted" msprop:Generator_RowEvArgName="OfficesRowChangeEvent" msprop:Generator_RowChangedName="OfficesRowChanged" msprop:Generator_RowClassName="OfficesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="OfficeId" msdata:DataType="System.Guid, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" msprop:Generator_ColumnVarNameInTable="columnOfficeId" msprop:Generator_ColumnPropNameInRow="OfficeId" msprop:Generator_ColumnPropNameInTable="OfficeIdColumn" msprop:Generator_UserColumnName="OfficeId" type="xs:string" />
              <xs:element name="OfficeName" msprop:Generator_ColumnVarNameInTable="columnOfficeName" msprop:Generator_ColumnPropNameInRow="OfficeName" msprop:Generator_ColumnPropNameInTable="OfficeNameColumn" msprop:Generator_UserColumnName="OfficeName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="256" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Offices" />
      <xs:field xpath="mstns:OfficeId" />
    </xs:unique>
  </xs:element>
</xs:schema>